{"version":3,"sources":["InputField.js","Api.js","UserItem.js","UserCard.js","ResultBox.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","textField","color","InputField","id","defaultValue","onChange","error","label","onKeyDown","classes","TextField","required","InputProps","className","InputLabelProps","SelectProps","apiBase","URL","setFunction","setErrorFunction","fetch","then","res","ok","json","result","catch","text","errorMessage","console","log","JSON","parse","search","searchParameter","page","perPage","setResults","setErrorMessage","theme","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","UserItem","user","handleClick","ListItem","button","alignItems","onClick","ListItemAvatar","Avatar","src","avatar_url","ListItemText","primary","login","defaultProps","url","minWidth","title","fontSize","pos","marginBottom","avatar","height","UserCard","Card","CardContent","Typography","variant","component","name","location","bio","followers","following","CardActions","Button","href","html_url","ResultBox","results","useState","selectedUser","setSelectedUser","userURL","setUserInfo","getUserProfile","userList","items","forEach","push","Grid","container","item","xs","List","total_count","App","searchField","setSearchField","setPage","isFieldEmpty","setIsFieldEmpty","handleSearchEvent","event","length","type","key","value","target","trim","startIcon","Pagination","count","Math","floor","Alert","severity","message","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.e00c9771.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n        textField:{\r\n            color: 'black'\r\n        }\r\n  });\r\n\r\nconst InputField = ({ id, defaultValue, onChange, error, label, onKeyDown }) => {\r\n    const classes = useStyles();\r\n    return(\r\n        <TextField\r\n        required \r\n        id={id} \r\n        defaultValue={defaultValue}\r\n        onChange={onChange}\r\n        error={error}\r\n        label={label}\r\n        onKeyDown={onKeyDown}\r\n        InputProps={{\r\n            className: classes.textField\r\n          }}\r\n        InputLabelProps={{\r\n            className: classes.textField\r\n        }}\r\n        SelectProps={{\r\n            className: classes.textField\r\n        }}\r\n\r\n        />\r\n    );\r\n}\r\n\r\nexport default InputField;","const apiBase =(URL, setFunction, setErrorFunction) =>{\r\n    fetch(URL)\r\n    .then(res => {\r\n        if (!res.ok) { throw res }\r\n        return res.json()\r\n    })\r\n    .then(\r\n        (result) => {\r\n            setFunction(result);\r\n            setErrorFunction(null);\r\n        })\r\n    .catch(\r\n        (error) => {\r\n            error.text().then(errorMessage =>{\r\n                console.log(errorMessage);\r\n                setErrorFunction(JSON.parse(errorMessage));\r\n            })\r\n        }\r\n    );\r\n}\r\n\r\n\r\nconst search = (searchParameter, page, perPage, setResults, setErrorMessage) =>\r\n    apiBase(`https://api.github.com/search/users?q=${searchParameter}&per_page=${perPage}&page=${page}`, setResults,setErrorMessage);\r\n\r\nconst getUserProfile = (userURL, setUserInfo, setErrorMessage) =>\r\n    apiBase(userURL, setUserInfo, setErrorMessage);\r\nexport {\r\n    search,\r\n    getUserProfile\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ListItem, ListItemText, ListItemAvatar, Avatar, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n}));\r\n\r\nconst  UserItem = ({user, handleClick}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <ListItem button alignItems='flex-start' onClick={()=> handleClick(user)}>\r\n            <ListItemAvatar>\r\n            <Avatar src={user?.avatar_url} />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n                primary={user?.login}\r\n            />\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nUserItem.defaultProps ={\r\n    user:{\r\n        avatar_url: '',\r\n        login: '',\r\n        url: ''\r\n    }\r\n}\r\n\r\nexport default UserItem\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Avatar, CardActions, CardContent, Button, Typography } from '@material-ui/core/';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n    },\r\n    title: {\r\n      fontSize: 24,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    avatar:{\r\n        height: '100px',\r\n        width: '100px'\r\n    }\r\n  });\r\n\r\nconst UserCard = ({ user }) => {\r\n    const classes = useStyles();\r\n    if (!user) {\r\n        return null;\r\n      }\r\n  \r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Avatar src={user?.avatar_url} className={classes.avatar}/>\r\n                <Typography variant='h5' component='h1'>\r\n                    {user?.name}\r\n                </Typography>\r\n                <Typography className={classes.pos} color='textSecondary'>\r\n                    {user?.login}\r\n                </Typography>\r\n                <Typography className={classes.pos} color='textSecondary'>\r\n                    {user?.location}\r\n                </Typography>\r\n                <Typography component='h4'>\r\n                    {user?.bio}\r\n                </Typography>\r\n\r\n                <Typography variant='body1' component='p'>\r\n                    Followers: {user?.followers}\r\n                </Typography>\r\n               \r\n                <Typography variant='body2' component='p'>\r\n                    following: {user?.following}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button variant='contained' href={user?.html_url}>View Profile</Button>\r\n            </CardActions>\r\n      </Card>\r\n    );\r\n}\r\n\r\n\r\nexport default UserCard;","import React,{ useState } from 'react';\r\nimport { List, Grid } from '@material-ui/core';\r\nimport UserItem from './UserItem';\r\nimport UserCard from './UserCard';\r\nimport { getUserProfile } from './Api';\r\n\r\nconst ResultBox = ({ results, setErrorMessage }) => {\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    const handleClick = (user) => { \r\n        getUserProfile(user.url, setSelectedUser, setErrorMessage);\r\n    }\r\n\r\n    const userList =[];\r\n    results.items.forEach(user => {\r\n        userList.push(<UserItem user={user} handleClick={handleClick} key={user.id}/>)\r\n    });\r\n\r\n    return (<Grid container>\r\n        <Grid item xs={6}>\r\n            <List>\r\n                {userList}\r\n            </List>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n            <UserCard user={selectedUser}/>\r\n        </Grid>\r\n        \r\n    </Grid>)\r\n};\r\n\r\nResultBox.defaultProps = {\r\n    results:{\r\n        items: [],\r\n        total_count: 0\r\n     }\r\n}\r\nexport default ResultBox;","import React, { useState } from 'react';\n\nimport './App.css';\nimport ImputField from './InputField';\nimport { Button, Grid, Typography } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { search } from './Api';\nimport ResultBox from './ResultBox';\nimport { Pagination, Alert }  from '@material-ui/lab';\n\n\nconst App = () => {\n  const [searchField, setSearchField] = useState('');\n  const [page, setPage] = useState(1);\n  const [results, setResults] =useState({items: [], total_count: 0});\n  const[isFieldEmpty, setIsFieldEmpty] = useState(true);\n  const [errorMessage, setErrorMessage] = useState(null);\n  const perPage = 10;\n  const handleTextEvent = (event) => {\n    if (event.target.value.trim().length>0) {\n      setIsFieldEmpty(false);\n    }\n    setSearchField(event.target.value.trim());\n  };\n  const handlePageEvent = (event, value) =>{\n    search(searchField, value, perPage, setResults, setErrorMessage);\n    setPage(value);\n  };\n// while (true) {\n//   search(searchField, 'eduardo', perPage, setResults, setErrorMessage);\n// };\n  const handleSearchEvent =(event) =>{\n    if (searchField.length<=0) {\n      setIsFieldEmpty(true);\n    } else {\n      setIsFieldEmpty(false);\n    }\n    if(\n      !isFieldEmpty && \n      (event.type === 'click' || event.key === 'Enter')\n      ){\n      search(searchField, 1, perPage, setResults, setErrorMessage);\n      setPage(1);\n    }\n  }\n  console.log(errorMessage);\n  return (\n    <div className='App-header'>\n      <Grid container>\n      <Grid item xs ={8}>\n        <ImputField \n          error={isFieldEmpty}\n          label='Search'\n          id='test'\n          value={searchField}\n          onChange={handleTextEvent}\n          onKeyDown={handleSearchEvent}\n        />\n        </Grid>\n        <Grid item xs={2}>\n        <Button \n          variant='contained'\n          startIcon={<SearchIcon />}\n          onClick={handleSearchEvent}\n        >\n          Search\n        </Button>\n        </Grid>\n        <Grid item xs={2}>\n        <Typography variant='body1' >\n          TotalCount: {results.total_count}\n        </Typography>\n        </Grid>\n      </Grid>\n      <ResultBox \n        results={results}\n        setErrorMessage={setErrorMessage}\n      />\n        {results.total_count>0\n        ? <Pagination count={Math.floor(results.total_count/perPage)} page={page} onChange={handlePageEvent} />\n        : null\n        }\n        {errorMessage\n        ? <Alert severity=\"error\">{errorMessage.message}</Alert>\n        : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}