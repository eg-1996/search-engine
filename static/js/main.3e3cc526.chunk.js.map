{"version":3,"sources":["InputField.js","Api.js","UserItem.js","UserCard.js","ResultBox.js","App.js","reportWebVitals.js","index.js"],"names":["InputField","id","defaultValue","onChange","TextField","required","search","searchParameter","page","perPage","setResults","fetch","then","res","json","result","console","log","error","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","palette","background","paper","inline","display","UserItem","user","handleClick","classes","ListItem","button","alignItems","onClick","ListItemAvatar","Avatar","src","avatar_url","ListItemText","primary","login","secondary","Fragment","Typography","variant","className","color","defaultProps","url","minWidth","title","fontSize","pos","marginBottom","avatar","height","UserCard","Card","CardContent","component","name","location","bio","followers","following","CardActions","Button","href","html_url","ResultBox","results","useState","selectedUser","setSelectedUser","userURL","setUserInfo","userList","items","forEach","push","Grid","container","item","xs","List","total_count","App","searchField","setSearchField","setPage","value","event","target","startIcon","Pagination","count","Math","floor","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3e3cc526.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst InputField = ({ id, defaultValue, onChange }) =>\r\n    <TextField \r\n        required \r\n        id={id} \r\n        defaultValue={defaultValue}\r\n        onChange={onChange}\r\n        />;\r\n\r\nexport default InputField;","const search = (searchParameter, page,perPage, setResults) =>{\r\n    fetch(`https://api.github.com/search/users?q=${searchParameter}&per_page=${perPage}&page=${page}`)\r\n    .then(res => res.json())\r\n    .then(\r\n        (result) => {\r\n            console.log(result);\r\n            setResults(result);\r\n        },\r\n        (error) => {\r\n            console.log(error);\r\n        }\r\n    );\r\n};\r\nconst getUserProfile = (userURL, setUserInfo) =>{\r\n    fetch(userURL)\r\n    .then(res => res.json())\r\n    .then(\r\n        (result) => {\r\n            console.log(result);\r\n            setUserInfo(result);\r\n        },\r\n        (error) => {\r\n            console.log(error);\r\n        }\r\n    );\r\n};\r\nconst getFollowingCount = (followingURL, setFollowingInfo) =>{\r\n    fetch(followingURL)\r\n    .then(res => res.json())\r\n    .then(\r\n        (result) => {\r\n            console.log(result);\r\n            setFollowingInfo(result);\r\n        },\r\n        (error) => {\r\n            console.log(error);\r\n        }\r\n    );\r\n};\r\nconst getFollowersCount = (followersURL, setFollowersInfo) =>{\r\n    fetch(followersURL)\r\n    .then(res => res.json())\r\n    .then(\r\n        (result) => {\r\n            console.log(result);\r\n            setFollowersInfo(result);\r\n        },\r\n        (error) => {\r\n            console.log(error);\r\n        }\r\n    );\r\n};\r\nconst getStarredCount = (starredURL, setStarredInfo) =>{\r\n    fetch(starredURL)\r\n    .then(res => res.json())\r\n    .then(\r\n        (result) => {\r\n            console.log(result);\r\n            setStarredInfo(result);\r\n        },\r\n        (error) => {\r\n            console.log(error);\r\n        }\r\n    );\r\n};\r\n\r\nexport {\r\n    search,\r\n    getUserProfile,\r\n    getFollowingCount,\r\n    getFollowersCount,\r\n    getStarredCount\r\n};","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { ListItem, ListItemText, ListItemAvatar, Avatar, Typography } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: '36ch',\r\n    backgroundColor: theme.palette.background.paper,\r\n  },\r\n  inline: {\r\n    display: 'inline',\r\n  },\r\n}));\r\n\r\nconst  UserItem = ({user, handleClick}) => {\r\n    const classes = useStyles();\r\n    return (\r\n        <ListItem button alignItems=\"flex-start\" onClick={()=> handleClick(user)}>\r\n            <ListItemAvatar>\r\n            <Avatar src={user?.avatar_url} />\r\n            </ListItemAvatar>\r\n            <ListItemText\r\n                primary={user?.login}\r\n                secondary={\r\n                    <React.Fragment>\r\n                    <Typography\r\n                        variant=\"body2\"\r\n                        className={classes.inline}\r\n                        color=\"textPrimary\"\r\n                    >\r\n                    </Typography>\r\n                        {\" More relevant info or description\"}\r\n                    </React.Fragment>\r\n                }\r\n            />\r\n        </ListItem>\r\n    );\r\n}\r\n\r\nUserItem.defaultProps ={\r\n    user:{\r\n        avatar_url: '',\r\n        login: '',\r\n        url: ''\r\n    }\r\n}\r\n\r\nexport default UserItem\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { Card, Avatar, CardActions, CardContent, Button, Typography } from '@material-ui/core/';\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n      minWidth: 275,\r\n    },\r\n    title: {\r\n      fontSize: 24,\r\n    },\r\n    pos: {\r\n      marginBottom: 12,\r\n    },\r\n    avatar:{\r\n        height: '100px',\r\n        width: '100px'\r\n    }\r\n  });\r\n\r\nconst UserCard = ({ user }) => {\r\n    const classes = useStyles();\r\n    if (!user) {\r\n        return null;\r\n      }\r\n  \r\n    return (\r\n        <Card className={classes.root}>\r\n            <CardContent>\r\n                <Avatar src={user?.avatar_url} className={classes.avatar}/>\r\n                <Typography variant=\"h5\" component=\"h1\">\r\n                    {user?.name}\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {user?.login}\r\n                </Typography>\r\n                <Typography className={classes.pos} color=\"textSecondary\">\r\n                    {user?.location}\r\n                </Typography>\r\n                <Typography component=\"h4\">\r\n                    {user?.bio}\r\n                </Typography>\r\n\r\n                <Typography variant=\"body1\" component=\"p\">\r\n                    Followers: {user?.followers}\r\n                </Typography>\r\n               \r\n                <Typography variant=\"body2\" component=\"p\">\r\n                    following: {user?.following}\r\n                </Typography>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Button href={user?.html_url}>View Profile</Button>\r\n            </CardActions>\r\n      </Card>\r\n    );\r\n}\r\n\r\n\r\nexport default UserCard;","import React,{ useState } from 'react';\r\nimport { List, Grid } from '@material-ui/core';\r\nimport UserItem from './UserItem';\r\nimport UserCard from './UserCard';\r\nimport { getUserProfile } from './Api';\r\n\r\nconst ResultBox = ({ results }) => {\r\n    const [selectedUser, setSelectedUser] = useState(null);\r\n    console.log(results);\r\n    const handleClick = (user) => { \r\n        getUserProfile(user.url, setSelectedUser);\r\n    }\r\n\r\n    const userList =[];\r\n    results.items.forEach(user => {\r\n        userList.push(<UserItem user={user} handleClick={handleClick} key={user.id}/>)\r\n    });\r\n\r\n    return (<Grid container>\r\n        <Grid item xs={6}>\r\n            <List>\r\n                {userList}\r\n            </List>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n            <UserCard user={selectedUser}/>\r\n        </Grid>\r\n        \r\n    </Grid>)\r\n};\r\n\r\nResultBox.defaultProps = {\r\n    results:{\r\n        items: [],\r\n        total_count: 0\r\n     }\r\n}\r\nexport default ResultBox;","import React, { useState } from 'react';\n\nimport './App.css';\nimport ImputField from './InputField';\nimport { Button, Grid } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { search } from './Api';\nimport ResultBox from './ResultBox';\nimport Pagination from '@material-ui/lab/Pagination';\n\n\nconst App = () => {\n  const [searchField, setSearchField] = useState('');\n  const [page, setPage] = useState(1);\n  const [results, setResults] =useState({items: [], total_count: 0});\n  const perPage = 10;\n  const handleTextEvent = (event) => {\n    setSearchField(event.target.value);\n  };\n  const handlePageEvent = (event, value) =>{\n    search(searchField, value, perPage, setResults)\n    setPage(value);\n  }\n  return (\n    <div className=\"App\">\n      <Grid container>\n      <Grid item xs ={9}>\n        <ImputField \n          id='test'\n          value={searchField}\n          onChange={handleTextEvent}\n        />\n        </Grid>\n        <Grid item xs={3}>\n        <Button \n          variant=\"contained\"\n          startIcon={<SearchIcon />}\n          onClick={()=>search(searchField, page, perPage, setResults)}\n        >\n          Search\n        </Button>\n        </Grid>\n      </Grid>\n      <ResultBox \n        results={results}\n      />\n        {results.total_count>0\n        ? <Pagination count={Math.floor(results.total_count/perPage)} page={page} onChange={handlePageEvent} />\n        : null\n        }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}