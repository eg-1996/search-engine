{"version":3,"sources":["InputField.js","Api.js","ResultBox.js","App.js","reportWebVitals.js","index.js"],"names":["InputField","id","defaultValue","onChange","TextField","required","search","searchParameter","setResults","fetch","then","res","json","result","error","console","log","ResultBox","results","Button","variant","onClick","App","useState","searchField","setSearchField","className","Grid","container","item","xs","value","event","target","startIcon","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PAYeA,EARI,SAAC,GAAD,IAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,SAArB,OACf,cAACC,EAAA,EAAD,CACIC,UAAQ,EACRJ,GAAIA,EACJC,aAAcA,EACdC,SAAUA,K,mCCIHG,EAbA,SAACC,EAAiBC,GAC7BC,MAAM,yCAAD,OAA0CF,IAC9CG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACGL,EAAWK,MAEf,SAACC,GACGC,QAAQC,IAAIF,OCGTG,EARG,SAACC,GAAD,OAAa,cAACC,EAAA,EAAD,CAC3BC,QAAQ,YACRC,QAAS,kBAAMN,QAAQC,IAAIE,IAFA,0BCyChBI,EAlCH,WACV,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA6BF,mBAAS,IAAtC,mBAAOL,EAAP,KAAgBV,EAAhB,KAKA,OACE,sBAAKkB,UAAU,MAAf,UACE,eAACC,EAAA,EAAD,CAAMC,WAAS,EAAf,UACA,cAACD,EAAA,EAAD,CAAME,MAAI,EAACC,GAAK,EAAhB,SACE,cAAC,EAAD,CACE7B,GAAG,OACH8B,MAAOP,EACPrB,SAVa,SAAC6B,GACpBP,EAAeO,EAAMC,OAAOF,YAYxB,cAACJ,EAAA,EAAD,CAAME,MAAI,EAACC,GAAI,EAAf,SACA,cAACX,EAAA,EAAD,CACEC,QAAQ,YACRc,UAAW,cAAC,IAAD,IACXb,QAAS,kBAAIf,EAAOkB,EAAahB,IAHnC,yBASF,cAAC,EAAD,CACEU,QAASA,QC1BFiB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqB3B,MAAK,YAAkD,IAA/C4B,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.92d5fb0e.chunk.js","sourcesContent":["import React from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n\r\nconst InputField = ({ id, defaultValue, onChange }) =>\r\n    <TextField \r\n        required \r\n        id={id} \r\n        defaultValue={defaultValue}\r\n        onChange={onChange}\r\n        />;\r\n\r\nexport default InputField;","const search = (searchParameter, setResults) =>{\r\n    fetch(`https://api.github.com/search/users?q=${searchParameter}`)\r\n    .then(res => res.json())\r\n    .then(\r\n        (result) => {\r\n            setResults(result);\r\n        },\r\n        (error) => {\r\n            console.log(error);\r\n        }\r\n    );\r\n};\r\n\r\nexport default search;","import { Button } from '@material-ui/core';\r\nimport React from 'react';\r\n\r\nconst ResultBox = (results) => <Button \r\n    variant=\"contained\"\r\n    onClick={() => console.log(results)}\r\n>\r\nlog Results\r\n</Button>\r\n\r\n\r\nexport default ResultBox;","import React, { useState } from 'react';\n\nimport './App.css';\nimport ImputField from './InputField';\nimport { Button, Grid } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport search from './Api';\nimport ResultBox from './ResultBox';\n\n\nconst App = () => {\n  const [searchField, setSearchField] = useState('');\n  const [results, setResults] =useState({});\n\n  const handleChange = (event) => {\n    setSearchField(event.target.value);\n  };\n  return (\n    <div className=\"App\">\n      <Grid container>\n      <Grid item xs ={9}>\n        <ImputField \n          id='test'\n          value={searchField}\n          onChange={handleChange}\n        />\n        </Grid>\n        <Grid item xs={3}>\n        <Button \n          variant=\"contained\"\n          startIcon={<SearchIcon />}\n          onClick={()=>search(searchField, setResults)}\n        >\n          Search\n        </Button>\n        </Grid>\n      </Grid>\n      <ResultBox \n        results={results}\n      />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}